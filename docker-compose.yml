version: '3'

services:
    reverse_proxy:
        build: ./reverse_proxy
        restart: always
        networks:
          - reverse_proxy_network
        ports:
          - "443:443"
          - "80:80"

    web:
        build: ./front_end
        restart: always
        depends_on:
            - reverse_proxy
        networks:
            - reverse_proxy_network

    api:
        build: ./back_end
        restart: always
        environment:
            - API_PORT
            - ROOT_ID
            - PIN_CODE
            - SECRET_KEY
            - MODE=prod
            - REDIS_HOST=redis
            - REDIS_PORT
            - DATABASE_URL=postgresql://$DATABASE_USER:$DATABASE_PASSWORD@db:$DATABASE_PORT/$DATABASE_NAME
        ports:
            - "${API_PORT}:${API_PORT}"
        networks:
            - backend

    redis:
        image: redis:latest
        restart: always
        networks:
            - backend

    db:
        image: postgres:alpine
        restart: always
        environment: 
            - POSTGRES_USER=${DATABASE_USER}
            - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
            - POSTGRES_DB=${DATABASE_NAME}
        networks:
            - backend
        volumes:
            - db-data:/var/lib/postgresql/data

networks:
    backend:
    reverse_proxy_network:

volumes:
    db-data:
